///Condicionais e Repetição

*) Qual é a saída da execução do código Python abaixo?
i = 0
while i < 5:
    print(i)
    i += 1
    if i == 3:
    break
else:
    print(0)

a) error
b) 0 1 2 0
c) 0 1 2 ***
d) nenhuma das anteriores
Resp: O comando else nunca é chamado pois o break faz sair da
repetição.


*) Qual é a saída do código Python abaixo?
i = 1
while True:
    if i%3 == 0:
        break
    print(i)
    i + = 1

a) 1 2
b) 1 2 3
c) erro ***
d) nenhuma das anteriores
Resp: Erro de sintaxe (SyntaxError) devido ao espaço entre os símbolos
+ e =.


*) Qual é a saída do código Python abaixo?
i = 1
while True:
    if i%2 == 0:
        break
    print(i)
    i += 2

a) 1
b) 1 2
c) 1 2 3 4 5 6 …
d) 1 3 5 7 9 11 … ***
Resp: O laço é infinito pois nunca temos um número par pois o contador
sempre soma 2 ao número que iniciou em 1.


*) Qual é a saída do código Python abaixo?
i = 2
while True:
    if i%3 == 0:
        break
    print(i)
    i += 2

a) 2 4 6 8 10 …
b) 2 4 ***
c) 2 3
d) erro
Resp: Como o número 6 é divisível por 3, o laço de repetição é
interrompido (comando break).


*) Qual é a saída do código Python abaixo?
i = 1
while False:
    if i%2 == 0:
        break
    print(i)
    i += 2

a) 1
b) 1 3 5 7 …
c) 1 2 3 4 …
d) nenhuma das anteriores ***
Resp: Como o teste de parada retorna falso, nunca se entra no laço.


*) Qual é a saída do código Python abaixo?
for i in range(10):
    if i == 5:
        break
    else:
        print(i)
else:
    print("Here")

a) 0 1 2 3 4 Here
b) 0 1 2 3 4 5 Here
c) 0 1 2 3 4 ***
d) 1 2 3 4 5
Resp: O comando break faz com que a repetição seja terminada. E o
comando for não tem else.