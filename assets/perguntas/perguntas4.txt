///Listas

*) Qual expressão abaixo resulta no valor 6?
A = [[1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]]

a) A[2][1]
b) A[1][2] ***
c) A[3][2]
d) A[2][3]
Resp: A linha de índice 1 e a coluna de índice 2 correspondem ao
elemento que está na segunda linha e terceira coluna pois os índices
começam em 0.


*) Qual a saída do código Python abaixo?
x = ['ab', 'cd']
for i in x:
    i.upper()
print(x)

a) [‘ab’, ‘cd’] ***
b) [‘AB’, ‘CD’]
c) [None, None]
d) nenhuma das anteriores
Resp: A função upper() não modifica a string, apenas retorna o
conteúdo em maiúsculas. Mas como não foi atribuído a nenhuma
variável, perdemos este conteúdo.


*) Qual a saída do código Python abaixo?
x = ['ab', 'cd']
for i in x:
    x.append(i.upper())
print(x)

a) [‘AB’, ‘CD’]
b) [‘ab’, ‘cd’, ‘AB’, ‘CD’]
c) [‘ab’, ‘cd’]
d) nenhuma das anteriores ***
Resp: trata-se de uma laço infinito. A lista aumenta indefinidamente


*) Qual comando abaixo cria uma lista em Python?
a) list1 = list()
b) list1 = []
c) list1 = list([1, 2, 3])
d) todas acima. ***
Resp: as letras a, b e c apresentam criações possíveis de lista.


*) Caso a variável list1 tenha armazenado o valor [2, 33, 222, 14, 25],
Qual é a saída de list1[-1]?
a) Erro
b) None
c) 25 ***
d) 2
Resp: em uma lista Python, podemos usar índices negativos para
começar a percorrê-la de trás para a frente.


*) Qual é a saída do código Python a seguir?
a=[10,23,56,[78]]
b=list(a)
a[3][0]=95
a[1]=34
print(b)
a) [10,34,56,[95]]
b) [10,23,56,[78]]
c) [10,23,56,[95]] ***
d) [10,34,56,[78]]
Resp: Apenas as alterações na sub-lista é refletida na lista copiada.